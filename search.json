[{"title":"Web开发者福利：这些播客让你灵感迸发","url":"http://yoursite.com/2016/09/15/boke/","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><h2>Web开发者福利：这些播客让你灵感迸发</h2>\n<p>作者：Thomas Peham</p>\n<p>网络上有很多Web开发的入门资源，其中就包括了很多非常有用的Web开发播客，它们可以成为你学习的有效手段。\n这应该是学习web开发知识最便捷的途径了。在此，我们整理了一个列表，表中罗列了一些内容质量较高的web开发播客，它们能对你入门Web开发起到帮助。\n一起来看一下吧。</p>\n<h2>THE WEB AHEAD</h2>\n<p>该播客由Jen Simmons每周更新，其内容多与最新技术和未来网络发展有关。除此之外，该播客上还有很多关于HTML5、快速响应设计和移动开发的内容。\nhttp://thewebahead.net/</p>\n<h2>SITEPOINT PODCAST</h2>\n<p>SitePoint因其良好的平台而知名。它经常发布一些关于Web开发方面的精彩播客。在其页面上，SitePoint还提供了一些不错的音频播客。\nhttp://www.sitepoint.com/web/podcast/</p>\n<h2>DEVELOPING PERSPECTIVE</h2>\n<p>该播客主要关注iOS开发方面的新闻。其作者，David Smith，表达了很多他在web开发问题上的洞见。此外，他也讨论了其他一些他所感兴趣的东西。大多数播客时长约15分钟。\nhttp://developingperspective.com/</p>\n<h2>BREAKING DEVELOPMENT PODCAST</h2>\n<p>这是一个&quot;老&quot;播客，因为它从2013年开始就没再进行任何更新。然而，该播客在web开发方面还是有一些不错的内容。\nhttps://itunes.apple.com/us/podcast/breaking-development-podcast/id553491521?mt=2</p>\n<h2>CREATIVE CODING</h2>\n<p>在该播客上，作者发表了自己的一些观点，也有一些关于编程学习方面的内容。它由Seb Lee-Delisle和游戏开发者Iain Lobb主办，是你缺少灵感时候的一个极佳源泉。\nhttp://creativecodingpodcast.com/</p>\n<h2>THIS DEVELOPER'S LIFE</h2>\n<p>该播客在开发人员的生活方面提供了一些不错的观点。如果你想进入Web开发领域，或者你本身就是一名开发人员，此播客一定能让你受益匪浅。\nhttp://thisdeveloperslife.com/</p>\n<h2>HAPPY MONDAY</h2>\n<p>作者是Sarah Parmeter。作者向我们讲述了一些有趣的故事，并且在web项目方面给我们灵感。每周一，它都会更新一期对某个web开发人员的访谈节目。\nhttp://www.happymondaypodcast.com/</p>\n<h2>THE CHANGELOG</h2>\n<p>此播客主要关注开源相关话题。此外，在软件开发方面的多个问题上，它也提供了一些见解。\n该播客每周五更新一期。\nhttp://thechangelog.com/podcast/</p>\n<h2>A LIFE WELL WASTED</h2>\n<p>该播客自称是关于视频游戏及其爱好者的网络电台秀。它收录了一些对视频游戏开发者的访谈，颇为有趣。\nhttp://alifewellwasted.com</p>\n<h2>SHOP TALK SHOW</h2>\n<p>该播客由Dave Rupert和Chris Coyler主办，自称是关于网络相关问题的网络电台秀，以对网络开发者的精彩访谈为特色。此外，它上面也有一些关于网络开发问题的内容。\nhttp://shoptalkshow.com/</p>\n<h2>LET'S MAKE MISTAKES</h2>\n<p>我真心要向所有web开发者和所有在这行工作的人推荐这个播客。它的作者是Jessie Char和Mike Monteiro，都是非常优秀的人。\nhttp://www.muleradio.net/mistakes/</p>\n<h2>INSERT CONTENT HERE &amp; THE CREATIVE PROCESS</h2>\n<p>这两个在lullabot.com上的播客虽然偏内容导向和设计导向，但这并不妨碍我在此推荐它们。两个播客都有一些颇为极客的话题，如web项目的相关问题，以及如何才能从这些项目中获取更多。它们绝对值得一听。\nInsert Content Here:\nhttps://www.lullabot.com/blog/podcasts/insert-content-here\nThe Creative Process:\nhttps://www.lullabot.com/blog/podcasts/the-creative-process</p>\n<h2>99% INVISIBLE</h2>\n<p>这个播客大多15-20分钟为一期，特别适合于短程出行的时候或散步的时候听。它把自己定位为设计播客，涵盖了大多数设计话题。但是，如果你正在寻找新的内容或是一些新的启发的话，我建议你也去收听这个播客。\nhttp://99percentinvisible.org/</p>\n<h2>THIS WEEK IN STARTUPS</h2>\n<p>很多web开发者都任职于科技创业公司或者正在自己创业，对这群人，我非常推荐THIS WEEK IN STARTUPS这个播客。它每周都会对一些成功的科技创业公司进行访谈。\nhttp://thisweekinstartups.com/</p>\n<h2>THE FREELANCE WEB</h2>\n<p>如果你是一个web开发的自由职业者的话，那这个播客绝对值得一听。它的作者是Sean Johnson和Liz Elcoate，不仅关注web开发话题，同时还有web产业新闻相关内容，以及一些超棒的访谈节目。\nhttp://www.thefreelanceweb.com/</p>\n<hr>\n<p>转载请注明来自<a href=\"https://swift3t.github.io/\" target=\"_blank\" rel=\"external\">@白的博客swift3t.github.io</a></p>\n"},{"title":"SublimeText3快捷键简要总结","url":"http://yoursite.com/2016/09/09/SublimeText3/","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><h1>SublimeText3快捷键简要总结</h1>\n<p>Sublime Text3是一款流行的文本编辑器软件，有点类似于TextMate，跨平台，可运行在Linux，Windows和Mac OS X。也是许多程序员喜欢使用的一款文本编辑器软件。</p>\n<h2>Sublime Text 3主要特色</h2>\n<p>-语法高亮、代码提示补全、代码折叠、自定义皮肤/配色方案、多便签</p>\n<p>-代码地图、多种界面布局与全屏免打扰模式</p>\n<p>-完全开放的用户自定义配置与神奇实用的编辑状态恢复功能</p>\n<p>-强大的多行选择和多行编辑</p>\n<p>-雷电般快速的文件切换</p>\n<p>-随心所欲的跳转：快速罗列与定位函数/HTML的元素、跳转到指定行</p>\n<p>-集所有功能于一身的命令面板</p>\n<p>-Package Control（绝不可错过的扩展包管理器）</p>\n<p>-更换主题或配色方案</p>\n<h2>快捷键总结</h2>\n<h3>选择类</h3>\n<p>Ctrl+D 选中光标所占的文本，继续操作则会选中下一个相同的文本。</p>\n<p>Alt+F3 选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。举个栗子：快速选中并更改所有相同的变量名、函数名等。</p>\n<p>Ctrl+L 选中整行，继续操作则继续选择下一行，效果和 Shift+↓ 效果一样。</p>\n<p>Ctrl+Shift+L 先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。</p>\n<p>Ctrl+Shift+M 选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。</p>\n<p>Ctrl+M 光标移动至括号内结束或开始的位置。</p>\n<p>Ctrl+Enter 在下一行插入新行。举个栗子：即使光标不在行尾，也能快速向下插入一行。</p>\n<p>Ctrl+Shift+Enter 在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。</p>\n<p>Ctrl+Shift+[ 选中代码，按下快捷键，折叠代码。</p>\n<p>Ctrl+Shift+] 选中代码，按下快捷键，展开代码。</p>\n<p>Ctrl+K+0 展开所有折叠代码。</p>\n<p>Ctrl+← 向左单位性地移动光标，快速移动光标。</p>\n<p>Ctrl+→ 向右单位性地移动光标，快速移动光标。</p>\n<p>shift+↑ 向上选中多行。</p>\n<p>shift+↓ 向下选中多行。</p>\n<p>Shift+← 向左选中文本。</p>\n<p>Shift+→ 向右选中文本。</p>\n<p>Ctrl+Shift+← 向左单位性地选中文本。</p>\n<p>Ctrl+Shift+→ 向右单位性地选中文本。</p>\n<p>Ctrl+Shift+↑ 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。</p>\n<p>Ctrl+Shift+↓ 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。</p>\n<p>Ctrl+Alt+↑ 向上添加多行光标，可同时编辑多行。</p>\n<p>Ctrl+Alt+↓ 向下添加多行光标，可同时编辑多行。</p>\n<h3>编辑类</h3>\n<p>Ctrl+J 合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。</p>\n<p>Ctrl+Shift+D 复制光标所在整行，插入到下一行。</p>\n<p>Tab 向右缩进。</p>\n<p>Shift+Tab 向左缩进。</p>\n<p>Ctrl+K+K 从光标处开始删除代码至行尾。</p>\n<p>Ctrl+Shift+K 删除整行。</p>\n<p>Ctrl+/ 注释单行。</p>\n<p>Ctrl+Shift+/ 注释多行。</p>\n<p>Ctrl+K+U 转换大写。</p>\n<p>Ctrl+K+L 转换小写。</p>\n<p>Ctrl+Z 撤销。</p>\n<p>Ctrl+Y 恢复撤销。</p>\n<p>Ctrl+U 软撤销，感觉和 Gtrl+Z 一样。</p>\n<p>Ctrl+F2 设置书签</p>\n<p>Ctrl+T 左右字母互换。</p>\n<p>F6 单词检测拼写</p>\n<h3>搜索类</h3>\n<p>Ctrl+F 打开底部搜索框，查找关键字。</p>\n<p>Ctrl+shift+F 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找，略高端，未研究。</p>\n<p>Ctrl+P 打开搜索框。举个栗子：1、输入当前项目中的文件名，快速搜索文件，2、输入@和关键字，查找文件中函数名，3、输入：和数字，跳转到文件中该行代码，4、输入#和关键字，查找变量名。</p>\n<p>Ctrl+G 打开搜索框，自动带：，输入数字跳转到该行代码。举个栗子：在页面代码比较长的文件中快速定位。</p>\n<p>Ctrl+R 打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。</p>\n<p>Ctrl+： 打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。</p>\n<p>Ctrl+Shift+P 打开命令框。场景栗子：打开命名框，输入关键字，调用sublime text或插件的功能，例如使用package安装插件。</p>\n<p>Esc 退出光标多行选择，退出搜索框，命令框等。</p>\n<h3>显示类</h3>\n<p>Ctrl+Tab 按文件浏览过的顺序，切换当前窗口的标签页。</p>\n<p>Ctrl+PageDown 向左切换当前窗口的标签页。</p>\n<p>Ctrl+PageUp 向右切换当前窗口的标签页。</p>\n<p>Alt+Shift+1 窗口分屏，恢复默认1屏（非小键盘的数字）</p>\n<p>Alt+Shift+2 左右分屏-2列</p>\n<p>Alt+Shift+3 左右分屏-3列</p>\n<p>Alt+Shift+4 左右分屏-4列</p>\n<p>Alt+Shift+5 等分4屏</p>\n<p>Alt+Shift+8 垂直分屏-2屏</p>\n<p>Alt+Shift+9 垂直分屏-3屏</p>\n<p>Ctrl+K+B 开启/关闭侧边栏。</p>\n<p>F11 全屏模式</p>\n<p>Shift+F11 免打扰模式</p>\n<p>强大的编辑器，丰富的插件，前端开发人员必备神器之一。</p>\n<hr>\n<p>转载请注明来自<a href=\"https://swift3t.github.io/\" target=\"_blank\" rel=\"external\">@白的博客swift3t.github.io</a></p>\n"},{"title":"JQuery UI - Accordion Widget","url":"http://yoursite.com/2016/08/29/JQuery-UI-Accordion-Widget/","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><h1>JQuery UI - Accordion Widget</h1>\n<p>首先，我们来看一下用 <code>Accordion</code> 做出来的效果</p>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/2849764-c49d923fb9f15553.gif\" alt=\"enter image description here\"></p>\n<h2>简单使用</h2>\n<p>可以看到，这么一个效果还是很美观的，那么我们应该怎么使用呢？首先我们需要 <code>JQuery UI</code> 提供给我们的代码资源，可以去 jqueryui.com 前去下载，然后在项目中引用。而且我们的项目还必须依赖于<code>JQuery</code> ，所以我们需要引入三个文件，如下所示。\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src=&quot;jquery-3.0.0.min.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script src=&quot;jquery-ui.min.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;jquery-ui.min.css&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>好了，依赖文件都引入完毕了，那么我们下面就用代码去做出这么一个效果，说是我们自己写，其实是别人写好了我们用而已。\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div id=&quot;Accordion&quot;&gt;</div><div class=\"line\">    &lt;h3&gt;Java&lt;/h3&gt;</div><div class=\"line\">    &lt;div&gt;</div><div class=\"line\">        &lt;p&gt;</div><div class=\"line\"></div><div class=\"line\">        &lt;/p&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;h3&gt;Android&lt;/h3&gt;</div><div class=\"line\">    &lt;div&gt;</div><div class=\"line\">        &lt;p&gt;</div><div class=\"line\"></div><div class=\"line\">        &lt;/p&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">    &lt;h3&gt;JQuery&lt;/h3&gt;</div><div class=\"line\">    &lt;div&gt;</div><div class=\"line\">        &lt;p&gt;</div><div class=\"line\">        &lt;/p&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n<p>这里我将 p 标签下的内容给去掉了，太占行数了，可以自行指定，下面就是书写我们自己的 JS 代码。\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script&gt;</div><div class=\"line\">    $(document).ready(function () &#123;</div><div class=\"line\">        $(&quot;#Accordion&quot;).accordion();</div><div class=\"line\">    &#125;)</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<p>对的，只需要这么一行，就会出现这么炫酷的效果。不过这里会出现一个问题，你会发现效果不和上图一样，这里的标题左边并没有那个动态的小图标，其实想一下也应该知道，我们本地并没有图标资源，怎么可能会有图标显示出来呢？所以，在这里我们需要将一开始引入的css 替换掉，如下\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>这个时候的效果就和图中完全相同了。下面，我们将会讲一些<code>Accordion</code> 属性。</p>\n<h2>其他属性</h2>\n<p>以上 Accordion 效果必须有一个标题是展开的，也就是说我们无法将所有的标题都隐藏，有的时候我们并不想要这么一个效果，那么我们可以这么设置\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(document).ready(function () &#123;</div><div class=\"line\">    $(&quot;#Accordion&quot;).accordion(&#123;</div><div class=\"line\">        collapsible:true</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>事实上，我们可以通过两种方式为我们的方法设置属性，以上只是其中一种，还有一种如下所示\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&quot;#Accordion&quot;).accordion();</div><div class=\"line\">$(&quot;#Accordion&quot;).accordion(&quot;option&quot;, &quot;collapsible&quot;, true);</div></pre></td></tr></table></figure></p>\n<p>区别在哪里呢？很明显前一种在中括号中我们可以同时设置多个属性的值，而在后一种主要是设置一种属性的值。</p>\n<p>当然，我们还可以指定图标的样式，以上显示的效果只是默认的一种而已，<code>JQuery UI</code> 官网上给我们提供了许多免费的图标样式，我们也可以手动进行指定\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&quot;#Accordion&quot;).accordion(&#123;</div><div class=\"line\">    icons: &#123;header: &quot;ui-icon-circle-arrow-e&quot;, activeHeader: &quot;ui-icon-circle-arrow-s&quot;&#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<hr>\n<p>转载请注明来自<a href=\"https://swift3t.github.io/\" target=\"_blank\" rel=\"external\">@白的博客swift3t.github.io</a></p>\n"},{"title":"LePetitPrince","url":"http://yoursite.com/2016/08/15/LePetitPrince/","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><h2>Le Petit Prince</h2>\n<p><div id=\"aplayer0\" class=\"aplayer\" style=\"margin-bottom: 20px;\"></div><script>var aplayer0 = new APlayer({element: document.getElementById(\"aplayer0\"),narrow: false,autoplay: true,showlrc: 0,music : {title: \"BAE BAE\",author: \"bigbang\",url: \"http://odx25j0zp.bkt.clouddn.com/BAE%20BAE.mp3\",pic: \"http://p4.music.126.net/18ZF3M8ZMjeBzuRnnNvBKA==/2889516558887956.jpg?param=130y130\"}});aplayer0.init();</script></p>\n<p><strong>If someone loves a flower, of which just one single blossom grows in all the millions and millions of stars, it is enough to make him happy just to look at the stars. He can say to himself, &quot;Somewhere, my flower is there…&quot; But if the sheep eats the flower, in one moment all his stars will be darkened… And you think that is not important!</strong></p>\n<p>倘若一个人对一朵花情有独钟，而那花在浩瀚的星河中，是独一无二的，那么，他只要仰望繁星点点，就心满意足了。他会喃喃自语：“我的花就在星河的某个角落……”可是，这花一旦被羊吃掉了，一瞬间，所有星星都将随之黯淡无光……那你也认为这不重要吗？</p>\n<p><strong>It has done me good, because of the color of the wheat fields. Go and look again at the roses. You will understand now that yours is unique in all the world.</strong></p>\n<p>驯服对我是有好处的——因为麦田的颜色。再回头看那些玫瑰花吧！到时你就明白你的玫瑰花仍是举世无双的一朵花。</p>\n<p><strong>It is the time you have wasted for your rose that makes your rose so important.</strong></p>\n<p>你在你的玫瑰花身上耗费的时间使得你的玫瑰花变得如此重要。</p>\n<p><strong>As for me, if I had fifty-three minutes to spend as I liked, I should walk at my leisure toward a spring of fresh water.</strong></p>\n<p>如果是我，要是我有五十三分钟可以自由运用，那我会悠哉游哉向一道清泉走去。</p>\n<p><strong><em>What makes the desert beautiful is that somewhere it hides a well…</em></strong></p>\n<p>沙漠之所以美丽，是因为在它的某个角落隐藏着一口井。</p>\n<p><strong>The men where you live, raise five thousand roses in the same garden – and they do not find in it what they are looking for. And yet what they are looking for could be found in one single rose, or in a little water. But eyes are blind. One must look with the heart…</strong></p>\n<p>你所居住的星球上的人们，在同一座花园培育了五千朵玫瑰——却无法从中找到他们所要寻找的东西。但是，他们所寻找的，其实是可以从一朵玫瑰花或一滴水中找到的。然而眼睛往往是盲从的。人还是必须用心去看。</p>\n<hr>\n<p>转载请注明来自<a href=\"https://swift3t.github.io/\" target=\"_blank\" rel=\"external\">@白的博客swift3t.github.io</a></p>\n"},{"title":"Emoji Demo - 使你的hexo支持Emoji表情","url":"http://yoursite.com/2016/08/03/Emoji/","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><h1>Emoji Demo</h1>\n<h2>使用方法</h2>\n<ol>\n<li>\n<p>比如你想发一个笑脸😄 直接输入笑脸对应的 emmoji 编码 <code>:smile:</code>就可以</p>\n</li>\n<li>\n<p><a href=\"http://www.webpagefx.com/tools/emoji-cheat-sheet/\" target=\"_blank\" rel=\"external\">查看全部 emoji 表情编码</a></p>\n</li>\n</ol>\n<h2>启用Emoji的方法</h2>\n<ol>\n<li>\n<p>卸载默认的 markdown 引擎: 打开终端, 去往博客的根目录下执行 <code>npm un hexo-renderer-marked --save</code></p>\n</li>\n<li>\n<p>然后安装新的解析引擎: <code>npm i hexo-renderer-markdown-it --save</code> 和其 emoji 插件 : <code>npm install markdown-it-emoji --save</code></p>\n</li>\n<li>\n<p>配置_config.yml文件\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">markdown: </div><div class=\"line\">\tplugins:   </div><div class=\"line\">\t\t- markdown-it-abbr   </div><div class=\"line\">\t\t- markdown-it-footnote   </div><div class=\"line\">\t\t- markdown-it-ins    </div><div class=\"line\">\t\t- markdown-it-sub    </div><div class=\"line\">\t\t- markdown-it-sup    </div><div class=\"line\">\t\t- markdown-it-emoji  <span class=\"comment\">//用emoji插件</span></div></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p><code>hexo clean &amp;&amp; hexo deploy -g</code> 查看效果</p>\n</li>\n</ol>\n<h2>Emoji表情示例</h2>\n<h3>Smileys &amp; People</h3>\n<p>Find emojis by name or description</p>\n<p>😀 😬 😁 😂 😃 😄 😅 😆 😇 😉 😊 🙂 🙃 ☺️ 😋 😌 😍 😘 😗 😙 😚 😜 😝 😛 🤑 🤓 😎 🤗 😏 😶 😐 😑 😒 🙄 🤔 😳 😞 😟 😠 😡 😔 😕 🙁 ☹️ 😣 😖 😫 😩 😤 😮 😱 😨 😰 😯 😦 😧 😢 😥 😪 😓 😭 😵 😲 🤐 😷 🤒 🤕 😴 💤 💩 😈 👿 👹 👺 💀 👻 👽 🤖 😺 😸 😹 😻 😼 😽 🙀 😿 😾 🙌 👏 👋 👍 👊 ✊ ✌️ 👌 ✋ 💪 🙏 ☝️ 👆 👇 👈 👉 🖕 🤘 🖖 ✍️ 💅 👄 👅 👂 👃 👁 👀 👤 🗣 👶 👦 👧 👨 👩 👱 👴 👵 👲 👳 👮 👷 💂 🕵 🎅 👼 👸 👰 🚶 🏃 💃 👯 👫 👬 👭 🙇 💁 🙅 🙆 🙋 🙎 🙍 💇 💆 💑 👩‍❤️‍👩 👨‍❤️‍👨 💏 👩‍❤️‍💋‍👩 👨‍❤️‍💋‍👨 👪 👨‍👩‍👧 👨‍👩‍👧‍👦 👨‍👩‍👦‍👦 👨‍👩‍👧‍👧 👩‍👩‍👦 👩‍👩‍👧 👩‍👩‍👧‍👦 👩‍👩‍👦‍👦 👩‍👩‍👧‍👧 👨‍👨‍👦 👨‍👨‍👧 👨‍👨‍👧‍👦 👨‍👨‍👦‍👦 👨‍👨‍👧‍👧 👚 👕 👖 👔 👗 👙 👘 💄 💋 👣 👠 👡 👢 👞 👟 👒 🎩 ⛑ 🎓 👑 🎒 👝 👛 👜 💼 👓 🕶 💍 🌂</p>\n<h3>Pale Emojis</h3>\n<p>👦🏻 👧🏻 👨🏻 👩🏻 👴🏻 👵🏻 👶🏻 👱🏻 👮🏻 👲🏻 👳🏻 👷🏻 👸🏻 💂🏻 🎅🏻 👼🏻 💆🏻 💇🏻 👰🏻 🙍🏻 🙎🏻 🙅🏻 🙆🏻 💁🏻 🙋🏻 🙇🏻 🙌🏻 🙏🏻 🚶🏻 🏃🏻 💃🏻 💪🏻 👈🏻 👉🏻 ☝️🏻 👆🏻 🖕🏻 👇🏻 ✌️🏻 🖖🏻 🤘🏻 🖐🏻 ✊🏻 ✋🏻 👊🏻 👌🏻 👍🏻 👎🏻 👋🏻 👏🏻 👐🏻 ✍🏻 💅🏻 👂🏻 👃🏻 🚣🏻 🛀🏻 🏄🏻 🏇🏻 🏊🏻 ⛹🏻 🏋🏻 🚴🏻 🚵🏻</p>\n<h3>Cream White Emojis</h3>\n<p>👦🏼 👧🏼 👨🏼 👩🏼 👴🏼 👵🏼 👶🏼 👱🏼 👮🏼 👲🏼 👳🏼 👷🏼 👸🏼 💂🏼 🎅🏼 👼🏼 💆🏼 💇🏼 👰🏼 🙍🏼 🙎🏼 🙅🏼 🙆🏼 💁🏼 🙋🏼 🙇🏼 🙌🏼 🙏🏼 🚶🏼 🏃🏼 💃🏼 💪🏼 👈🏼 👉🏼 ☝️🏼 👆🏼 🖕🏼 👇🏼 ✌️🏼 🖖🏼 🤘🏼 🖐🏼 ✊🏼 ✋🏼 👊🏼 👌🏼 👍🏼 👎🏼 👋🏼 👏🏼 👐🏼 ✍🏼 💅🏼 👂🏼 👃🏼 🚣🏼 🛀🏼 🏄🏼 🏇🏼 🏊🏼 ⛹🏼 🏋🏼 🚴🏼 🚵🏼</p>\n<h3>Moderate Brown Emojis</h3>\n<p>👦🏽 👧🏽 👨🏽 👩🏽 👴🏽 👵🏽 👶🏽 👱🏽 👮🏽 👲🏽 👳🏽 👷🏽 👸🏽 💂🏽 🎅🏽 👼🏽 💆🏽 💇🏽 👰🏽 🙍🏽 🙎🏽 🙅🏽 🙆🏽 💁🏽 🙋🏽 🙇🏽 🙌🏽 🙏🏽 🚶🏽 🏃🏽 💃🏽 💪🏽 👈🏽 👉🏽 ☝️🏽 👆🏽 🖕🏽 👇🏽 ✌️🏽 🖖🏽 🤘🏽 🖐🏽 ✊🏽 ✋🏽 👊🏽 👌🏽 👍🏽 👎🏽 👋🏽 👏🏽 👐🏽 ✍🏽 💅🏽 👂🏽 👃🏽 🚣🏽 🛀🏽 🏄🏽 🏇🏽 🏊🏽 ⛹🏽 🏋🏽 🚴🏽 🚵🏽</p>\n<h3>Dark Brown Emojis</h3>\n<p>👦🏾 👧🏾 👨🏾 👩🏾 👴🏾 👵🏾 👶🏾 👱🏾 👮🏾 👲🏾 👳🏾 👷🏾 👸🏾 💂🏾 🎅🏾 👼🏾 💆🏾 💇🏾 👰🏾 🙍🏾 🙎🏾 🙅🏾 🙆🏾 💁🏾 🙋🏾 🙇🏾 🙌🏾 🙏🏾 🚶🏾 🏃🏾 💃🏾 💪🏾 👈🏾 👉🏾 ☝️🏾 👆🏾 🖕🏾 👇🏾 ✌️🏾 🖖🏾 🤘🏾 🖐🏾 ✊🏾 ✋🏾 👊🏾 👌🏾 👍🏾 👎🏾 👋🏾 👏🏾 👐🏾 ✍🏾 💅🏾 👂🏾 👃🏾 🚣🏾 🛀🏾 🏄🏾 🏇🏾 🏊🏾 ⛹🏾 🏋🏾 🚴🏾 🚵🏾</p>\n<h3>Black Emojis</h3>\n<p>👦🏿 👧🏿 👨🏿 👩🏿 👴🏿 👵🏿 👶🏿 👱🏿 👮🏿 👲🏿 👳🏿 👷🏿 👸🏿 💂🏿 🎅🏿 👼🏿 💆🏿 💇🏿 👰🏿 🙍🏿 🙎🏿 🙅🏿 🙆🏿 💁🏿 🙋🏿 🙇🏿 🙌🏿 🙏🏿 🚶🏿 🏃🏿 💃🏿 💪🏿 👈🏿 👉🏿 ☝️🏿 👆🏿 🖕🏿 👇🏿 ✌️🏿 🖖🏿 🤘🏿 🖐🏿 ✊🏿 ✋🏿 👊🏿 👌🏿 👍🏿 👎🏿 👋🏿 👏🏿 👐🏿 ✍🏿 💅🏿 👂🏿 👃🏿 🚣🏿 🛀🏿 🏄🏿 🏇🏿 🏊🏿 ⛹🏿 🏋🏿 🚴🏿 🚵🏿</p>\n<h3>Animals &amp; Nature</h3>\n<p>🐶 🐱 🐭 🐹 🐰 🐻 🐼 🐨 🐯 🦁 🐮 🐷 🐽 🐸 🐙 🐵 🙈 🙉 🙊 🐒 🐔 🐧 🐦 🐤 🐣 🐥 🐺 🐗 🐴 🦄 🐝 🐛 🐌 🐞 🐜 🕷 🦂 🦀 🐍 🐢 🐠 🐟 🐡 🐬 🐳 🐋 🐊 🐆 🐅 🐃 🐂 🐄 🐪 🐫 🐘 🐐 🐏 🐑 🐎 🐖 🐀 🐁 🐓 🦃 🕊 🐕 🐩 🐈 🐇 🐿 🐾 🐉 🐲 🌵 🎄 🌲 🌳 🌴 🌱 🌿 ☘ 🍀 🎍 🎋 🍃 🍂 🍁 🌾 🌺 🌻 🌹 🌷 🌼 🌸 💐 🍄 🌰 🎃 🐚 🕸 🌎 🌍 🌏 🌕 🌖 🌗 🌘 🌑 🌒 🌓 🌔 🌚 🌝 🌛 🌜 🌞 🌙 ⭐️ 🌟 💫 ✨ ☄ ☀️ 🌤 ⛅️ 🌥 🌦 ☁️ 🌧 ⛈ 🌩 ⚡️ 🔥 💥 ❄️ 🌨 🔥 💥 ❄️ 🌨 ☃️ ⛄️ 🌬 💨 🌪 🌫 ☂️ ☔️ 💧 💦 🌊</p>\n<h3>Food &amp; Drink</h3>\n<p>🍏 🍎 🍐 🍊 🍋 🍌 🍉 🍇 🍓 🍈 🍒 🍑 🍍 🍅 🍆 🌶 🌽 🍠 🍯 🍞 🧀 🍗 🍖 🍤 🍳 🍔 🍟 🌭 🍕 🍝 🌮 🌯 🍜 🍲 🍥 🍣 🍱 🍛 🍙 🍚 🍘 🍢 🍡 🍧 🍨 🍦 🍰 🎂 🍮 🍬 🍭 🍫 🍿 🍩 🍪 🍺 🍻 🍷 🍸 🍹 🍾 🍶 🍵 ☕️ 🍼 🍴 🍽</p>\n<h3>Activity and Sports</h3>\n<p>⚽️ 🏀 🏈 ⚾️ 🎾 🏐 🏉 🎱 ⛳️ 🏌 🏓 🏸 🏒 🏑 🏏 🎿 ⛷ 🏂 ⛸ 🏹 🎣 🚣 🏊 🏄 🛀 ⛹ 🏋 🚴 🚵 🏇 🕴 🏆 🎽 🏅 🎖 🎗 🏵 🎫 🎟 🎭 🎨 🎪 🎤 🎧 🎼 🎹 🎷 🎺 🎸 🎻 🎬 🎮 👾 🎯 🎲 🎰 🎳</p>\n<h3>Travel &amp; Places</h3>\n<p>🚗 🚕 🚙 🚌 🚎 🏎 🚓 🚑 🚒 🚐 🚚 🚛 🚜 🏍 🚲 🚨 🚔 🚍 🚘 🚖 🚡 🚠 🚟 🚃 🚋 🚝 🚄 🚅 🚈 🚞 🚂 🚆 🚇 🚊 🚉 🚁 🛩 ✈️ 🛫 🛬 ⛵️ 🛥 🚤 ⛴ 🛳 🚀 🛰 💺 ⚓️ 🚧 ⛽️ 🚏 🚦 🚥 🏁 🚢 🎡 🎢 🎠 🏗 🌁 🗼 🏭 ⛲️ 🎑 ⛰ 🏔 🗻 🌋 🗾 🏕 ⛺️ 🏞 🛣 🛤 🌅 🌄 🏜 🏖 🏝 🌇 🌆 🏙 🌃 🌉 🌌 🌠 🎇 🎆 🌈 🏘 🏰 🏯 🏟 🗽 🏠 🏡 🏚 🏢 🏬 🏣 🏤 🏥 🏦 🏨 🏪 🏫 🏩 💒 🏛 ⛪️ 🕌 🕍 🕋 ⛩</p>\n<h3>Objects</h3>\n<p>⌚️ 📱 📲 💻 ⌨ 🖥 🖨 🖱 🖲 🕹 🗜 💽 💾 💿 📀 📼 📷 📸 📹 🎥 📽 🎞 📞 ☎️ 📟 📠 📺 📻 🎙 🎚 🎛 ⏱ ⏲ ⏰ 🕰 ⏳ ⌛️ 📡 🔋 🔌 💡 🔦 🕯 🗑 🛢 💸 💵 💴 💶 💷 💰 💳 💎 ⚖ 🔧 🔨 ⚒ 🛠 ⛏ 🔩 ⚙ ⛓ 🔫 💣 🔪 🗡 ⚔ 🛡 🚬 ☠ ⚰ ⚱ 🏺 🔮 📿 💈 ⚗ 🔭 🔬 🕳 💊 💉 🌡 🏷 🔖 🚽 🚿 🛁 🔑 🗝 🛋 🛌 🛏 🚪 🛎 🖼 🗺 ⛱ 🗿 🛍 🎈 🎏 🎀 🎁 🎊 🎉 🎎 🎐 🎌 🏮 ✉️ 📩 📨 📧 💌 📮 📪 📫 📬 📭 📦 📯 📥 📤 📜 📃 📑 📊 📈 📉 📄 📅 📆 🗓 📇 🗃 🗳 🗄 📋 🗒 📁 📂 🗂 🗞 📰 📓 📕 📗 📘 📙 📔 📒 📚 📖 🔗 📎 🖇 ✂️ 📐 📏 📌 📍 🚩 🏳 🏴 🔐 🔒 🔓 🔏 🖊 🖊 🖋 ✒️ 📝 ✏️ 🖍 🖌 🔍 🔎</p>\n<h3>Symbols</h3>\n<p>❤️ 💛 💙 💜 💔 ❣️ 💕 💞 💓 💗 💖 💘 💝 💟 ☮ ✝️ ☪ 🕉 ☸ ✡️ 🔯 🕎 ☯️ ☦ 🛐 ⛎ ♈️ ♉️ ♊️ ♋️ ♌️ ♍️ ♎️ ♏️ ♐️ ♑️ ♒️ ♓️ 🆔 ⚛ 🈳 🈹 ☢ ☣ 📴 📳 🈶 🈚️ 🈸 🈺 🈷️ ✴️ 🆚 🉑 💮 🉐 ㊙️ ㊗️ 🈴 🈵 🈲 🅰️ 🅱️ 🆎 🆑 🅾️ 🆘 ⛔️ 📛 🚫 ❌ ⭕️ 💢 ♨️ 🚷 🚯 🚳 🚱 🔞 📵 ❗️ ❕ ❓ ❔ ‼️ ⁉️ 💯 🔅 🔆 🔱 ⚜ 〽️ ⚠️ 🚸 🔰 ♻️ 🈯️ 💹 ❇️ ✳️ ❎ ✅ 💠 🌀 ➿ 🌐 Ⓜ️ 🏧 🈂️ 🛂 🛃 🛄 🛅 ♿️ 🚭 🚾 🅿️ 🚰 🚹 🚺 🚼 🚻 🚮 🎦 📶 🈁 🆖 🆗 🆙 🆒 🆕 🆓 0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟 🔢 ▶️ ⏸ ⏯ ⏹ ⏺ ⏭ ⏮ ⏩ ⏪ 🔀 🔁 🔂 ◀️ 🔼 🔽 ⏫ ⏬ ➡️ ⬅️ ⬆️ ⬇️ ↗️ ↘️ ↙️ ↖️ ↕️ ↔️ 🔄 ↪️ ↩️ ⤴️ ⤵️ #️⃣ *️⃣ ℹ️ 🔤 🔡 🔠 🔣 🎵 🎶 〰️ ➰ ✔️ 🔃 ➕ ➖ ➗ ✖️ 💲 💱 ©️ ®️ ™️ 🔚 🔙 🔛 🔝 🔜 ☑️ 🔘 ⚪️ ⚫️ 🔴 🔵 🔸 🔹 🔶 🔷 🔺 ▪️ ▫️ ⬛️ ⬜️ 🔻 ◼️ ◻️ ◾️ ◽️ 🔲 🔳 🔈 🔉 🔊 🔇 📣 📢 🔔 🔕 🃏 🀄️ ♠️ ♣️ ♥️ ♦️ 🎴 👁‍🗨 💭 🗯 💬 🕐 🕑 🕒 🕓 🕔 🕕 🕖 🕗 🕘 🕙 🕚 🕛 🕜 🕝 🕞 🕟 🕠 🕡 🕢 🕣 🕤 🕥 🕦 🕧</p>\n<h3>Flags</h3>\n<p>🇦🇫 🇦🇽 🇦🇱 🇩🇿 🇦🇸 🇦🇩 🇦🇴 🇦🇮 🇦🇶 🇦🇬 🇦🇷 🇦🇲 🇦🇼 🇦🇺 🇦🇹 🇦🇿 🇧🇸 🇧🇭 🇧🇩 🇧🇧 🇧🇾 🇧🇪 🇧🇿 🇧🇯 🇧🇲 🇧🇹 🇧🇴 🇧🇶 🇧🇦 🇧🇼 🇧🇷 🇮🇴 🇻🇬 🇧🇳 🇧🇬 🇧🇫 🇧🇮 🇨🇻 🇰🇭 🇨🇲 🇨🇦 🇮🇨 🇰🇾 🇨🇫 🇹🇩 🇨🇱 🇨🇳 🇨🇽 🇨🇨 🇨🇴 🇰🇲 🇨🇬 🇨🇩 🇨🇰 🇨🇷 🇭🇷 🇨🇺 🇨🇼 🇨🇾 🇨🇿 🇩🇰 🇩🇯 🇩🇲 🇩🇴 🇪🇨 🇪🇬 🇸🇻 🇬🇶 🇪🇷 🇪🇪 🇪🇹 🇪🇺 🇫🇰 🇫🇴 🇫🇯 🇫🇮 🇫🇷 🇬🇫 🇵🇫 🇹🇫 🇬🇦 🇬🇲 🇬🇪 🇩🇪 🇬🇭 🇬🇮 🇬🇷 🇬🇱 🇬🇩 🇬🇵 🇬🇺 🇬🇹 🇬🇬 🇬🇳 🇬🇼 🇬🇾 🇭🇹 🇭🇳 🇭🇰 🇭🇺 🇮🇸 🇮🇳 🇮🇩 🇮🇷 🇮🇶 🇮🇪 🇮🇲 🇮🇱 🇮🇹 🇨🇮 🇯🇲 🇯🇵 🇯🇪 🇯🇴 🇰🇿 🇰🇪 🇰🇮 🇽🇰 🇰🇼 🇰🇬 🇱🇦 🇱🇻 🇱🇧 🇱🇸 🇱🇷 🇱🇾 🇱🇮 🇱🇹 🇱🇺 🇲🇴 🇲🇰 🇲🇬 🇲🇼 🇲🇾 🇲🇻 🇲🇱 🇲🇹 🇲🇭 🇲🇶 🇲🇷 🇲🇺 🇾🇹 🇲🇽 🇫🇲 🇲🇩 🇲🇨 🇲🇳 🇲🇪 🇲🇸 🇲🇦 🇲🇿 🇲🇲 🇳🇦 🇳🇷 🇳🇵 🇳🇱 🇳🇨 🇳🇿 🇳🇮 🇳🇪 🇳🇬 🇳🇺 🇳🇫 🇲🇵 🇰🇵 🇳🇴 🇴🇲 🇵🇰 🇵🇼 🇵🇸 🇵🇦 🇵🇬 🇵🇾 🇵🇪 🇵🇭 🇵🇳 🇵🇱 🇵🇹 🇵🇷 🇶🇦 🇷🇪 🇷🇴 🇷🇺 🇷🇼 🇧🇱 🇸🇭 🇰🇳 🇱🇨 🇵🇲 🇻🇨 🇼🇸 🇸🇲 🇸🇹 🇸🇦 🇸🇳 🇷🇸 🇸🇨 🇸🇱 🇸🇬 🇸🇽 🇸🇰 🇸🇮 🇸🇧 🇸🇴 🇿🇦 🇬🇸 🇰🇷 🇸🇸 🇪🇸 🇱🇰 🇸🇩 🇸🇷 🇸🇿 🇸🇪 🇨🇭 🇸🇾 🇹🇼 🇹🇯 🇹🇿 🇹🇭 🇹🇱 🇹🇬 🇹🇰 🇹🇴 🇹🇹 🇹🇳 🇹🇷 🇹🇲 🇹🇨 🇹🇻 🇺🇬 🇺🇦 🇦🇪 🇬🇧 🇺🇸 🇻🇮 🇺🇾 🇺🇿 🇻🇺 🇻🇦 🇻🇪 🇻🇳 🇼🇫 🇪🇭 🇾🇪 🇿🇲 🇿🇼</p>\n<p>☺️ ☹ ☝️ ✌️ ✍️ ❤️ ❣️ ☠ ♨️ ✈️ ⌛ ⌚ ♈ ♉ ♊ ♋ ♌ ♍ ♎ ♏ ♐ ♑ ♒ ♓ ☀️ ☁️ ☂️ ❄️ ⛄️ ☄ ♠️ ♥️ ♦️ ♣️ ▶️ ◀️ ☎️ ⌨ ✉️ ✏️ ✒️ ✂️ ↗️ ➡️ ↘️ ↙️ ↖️ ↕️ ↔️ ↩️ ↪️ ✡️ ☸ ☯️ ✝️ ☦ ☪ ☮ ☢ ☣ ☑️ ✔️ ✖️ ✳️ ✴️ ❇️ ‼️ ©️ ®️ ™️ Ⓜ️ ▪️ ▫️ #⃣️ *️⃣ 0⃣️ 1⃣️ 2⃣️ 3⃣️ 4⃣️ 5⃣️ 6⃣️ 7⃣️ 8⃣️ 9⃣️ ⁉️ ℹ️ ⤴️ ⤵️ ♻️ ◻️ ◼️ ◽ ◾ ☕ ⚠️ ☔ ⏏ ⬆️ ⬇️ ⬅️ ⚡ ☘ ⚓ ♿ ⚒ ⚙ ⚗ ⚖ ⚔ ⚰ ⚱ ⚜ ⚛ ⚪ ⚫ 🀄 ⭐ ⬛ ⬜ ⛑ ⛰ ⛪ ⛲ ⛺ ⛽ ⛵ ⛴ ⛔ ⛅ ⛈ ⛱ ⛄ ⚽ ⚾️ ⛳ ⛸ ⛷ ⛹ ⛏ ⛓ ⛩ ⭕ ❗ 🅿️ ❦ ♕ ♛ ♔ ♖ ♜ ☾ → ⇒ ⟹ ⇨ ⇰ ➩ ➪ ➫ ➬ ➭ ➮ ➯ ➲ ➳ ➵ ➸ ➻ ➺ ➼ ➽ ☜ ☟ ➹ ➷ ↶ ↷ ✆ ⌘ ⎋ ⏎ ⏏ ⎈ ⎌ ⍟ ❥ ツ ღ ☻</p>\n<h2>Emoji表情编码表</h2>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/Emoji%20cheat%20sheet.png\" alt=\"enter image description here\"></p>\n<hr>\n<p>转载请注明来自<a href=\"https://swift3t.github.io/\" target=\"_blank\" rel=\"external\">@白的博客swift3t.github.io</a></p>\n<hr>\n"},{"title":"只用十分钟 快速部署github+hexo","url":"http://yoursite.com/2016/07/25/Hexo/","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><h1>只用十分钟 快速部署github+hexo</h1>\n<p>大家也搭建过博客，很多时候，按着教程来做就可以了。当时为了搭建Hexo博客并部署到Github，走了不少弯路。为了给大家提供方便，我决定写一篇只用十分钟，用截图方式讲解“搭建Hexo博客并部署到Github”。</p>\n<h2>部署环境</h2>\n<ul>\n<li>windows环境</li>\n<li>git</li>\n<li>node.js</li>\n</ul>\n<h2>安装hexo</h2>\n<ol>\n<li>利用 npm 命令。在任意位置点击鼠标右键，选择Git Base。</li>\n</ol>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/1.JPG\" alt=\"enter image description here\"></p>\n<ol start=\"2\">\n<li>输入命令：\n<code>npm install -g hexo</code>\n注意：-g是指全局安装hexo。</li>\n</ol>\n<h2>创建Hexo文件夹</h2>\n<ul>\n<li>安装完成后，在你喜爱的文件夹下（例如C:\\Hexo），执行以下指令(在C:\\Hexo内点击鼠标右键，选择Git Bash)，Hexo 即会自动在目标文件夹建立网站所需要的所有文件。\n<code>hexo init</code></li>\n</ul>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160923154647.png\" alt=\"enter image description here\"></p>\n<h2>安装依赖包</h2>\n<p><code>npm install</code></p>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160923155020.png\" alt=\"enter image description here\"></p>\n<h2>本地查看</h2>\n<ul>\n<li>现在我们已经搭建起本地的hexo博客了，在你的hexo文件夹执行以下命令(例如C:\\Hexo)，然后到浏览器输入localhost:4000看看。\n<code>hexo generate</code>\n<code>hexo server</code></li>\n</ul>\n<h2>注册github账号</h2>\n<ul>\n<li>略过。</li>\n</ul>\n<h2>创建Repository</h2>\n<ul>\n<li>创建的时候注意Repository的名字。比如我的Github账号是swift3t，那么我应该创建的Repository的名字是：swift3t.github.io。</li>\n</ul>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160923155813.png\" alt=\"enter image description here\"></p>\n<h2>修改配置文件</h2>\n<ul>\n<li>到你刚刚创建的Repository下，找到以下内容,然后复制里面的地址。然后编辑_config.yml文件（在C:\\Hexo下）。</li>\n</ul>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160923160402.png\" alt=\"enter image description here\"></p>\n<ul>\n<li>修改文件里面的deploy。其中的repository就改成你刚刚复制的地址。保存这个文件。</li>\n</ul>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160923160550.png\" alt=\"enter image description here\"></p>\n<h2>设置SSH keys</h2>\n<ol>\n<li>在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。</li>\n</ol>\n<p><code>ls -al ~/.ssh</code></p>\n<ol start=\"2\">\n<li>如果不存在就没有关系，如果存在的话，直接删除此位置.ssh文件夹里面所有文件：</li>\n</ol>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160923160851.png\" alt=\"enter image description here\"></p>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160923161129.png\" alt=\"enter image description here\"></p>\n<ol start=\"3\">\n<li>\n<p>输入以下指令（邮箱就是你注册Github时候的邮箱）后按回车，然后继续按三个回车，出现以下界面：\n<code>ssh-keygen -t rsa -C &quot;xx@xx.com&quot;</code></p>\n</li>\n<li>\n<p>然后分别键入以下三条指令：\n<code>ssh-agent -s</code>\neval <code>ssh-agent -s</code> (加上eval)\n<code>ssh-add</code></p>\n</li>\n</ol>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160923161409.png\" alt=\"enter image description here\"></p>\n<ol start=\"5\">\n<li>到了这一步，就可以添加SSH key到你的Github账户了。键入以下指令可以直接复制key到剪贴板：</li>\n</ol>\n<p><code>clip &lt; ~/.ssh/id_rsa.pub</code></p>\n<ol start=\"6\">\n<li>进入github.com，右上角进入Settings,左边栏找到SSH and GPG keys,点击new SSH key。title随便输入，key里面按ctrl+v粘贴刚才复制到剪贴板里面的key。</li>\n</ol>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160923161822.png\" alt=\"enter image description here\">\n<img src=\"http://odx25j0zp.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160923161841.png\" alt=\"enter image description here\"></p>\n<ol start=\"7\">\n<li>点击Add SSH key。</li>\n</ol>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160923162332.png\" alt=\"enter image description here\"></p>\n<ol start=\"8\">\n<li>输入你的Github密码即可完成SSH Key的添加。键入以下命令测试是否成功。你可能会看到有警告，没事，输入“yes”就好。</li>\n</ol>\n<p><code>ssh -T git@github.com</code></p>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160923162711.png\" alt=\"enter image description here\"></p>\n<h2>完成部署</h2>\n<ol>\n<li>键入指令：\n<code>hexo generate</code>\n<code>hexo deploy</code></li>\n</ol>\n<p>注：在执行 hexo deploy 后,如果出现 error deployer not found:git 的错误，请先执行:\n<code>npm install hexo-deployer-git --save</code>  然后再执行以上两条指令即可。</p>\n<ol start=\"2\">\n<li>OK，我们的博客就已经完全搭建起来了，在浏览器输入（xx是你的用户名）：</li>\n</ol>\n<p>http://xx.github.io/</p>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160923163455.png\" alt=\"enter image description here\"></p>\n<hr>\n<p>转载请注明来自<a href=\"https://swift3t.github.io/\" target=\"_blank\" rel=\"external\">@白的博客swift3t.github.io</a></p>\n"},{"title":"Bootstrap——来自《前端养成记》","url":"http://yoursite.com/2016/07/19/Bootstrap/","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><h1>逐行阅读 Bootstrap 源码</h1>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/587038-726efadda7ef18df.png\" alt=\"enter image description here\"></p>\n<h2>前言</h2>\n<p><strong><em>Bootstrap</em></strong>是我接触前端开发时学习的第一个 CSS 框架，也是第一个完整看完文档的开源项目。在正式和非正式项目中多次使用 Bootstrap v3，也基本了解了 Bootstrap 的优缺点、如何定制 Bootstrap 等“高阶玩法”。</p>\n<p>在自学前端开发的两年余时间里，裸写 CSS 代码时总能遇到一些没有见过的“古怪” CSS 语句和样式，而在使用 Bootstrap 时并不会出现此类问题，遂决定阅读 Bootstrap 项目中 CSS 部分的源码，看看到底是什么在“扰乱”开发者的视线，而 Bootstrap 为开发者提高效率做了哪些有趣的事情。</p>\n<h2>说明</h2>\n<ul>\n<li>本博文内容基于 Bootstrap <a href=\"http://getbootstrap.com/\" target=\"_blank\" rel=\"external\">v3.3.7</a>。按照 <code>Bootstrap.css</code> 文件从上到下的顺序逐行进行阅读；</li>\n<li>博文标题中的“<strong><em>逐行阅读 Bootstrap 源码</em></strong>”，是指逐行阅读生成的 <code>Bootstrap.css</code> 文件代码，并非阅读 Bootstrap 项目构建前的原始文件代码，诸如 LESS 文件代码、JavaScript 代码等；</li>\n<li>本博文并不涉及 Bootstrap 项目中的 JavaScript 部分；</li>\n<li>以下遴选出来的 CSS 属性或语句，是基于本人现有水平进行挑选的，基本放弃阅读和理解兼容旧版 IE 浏览器的 hack 代码；</li>\n<li>本文不适合 CSS 初学者，仅作为个人备忘录。</li>\n</ul>\n<h2>正文</h2>\n<p>由于 <code>Bootstrap v3</code> 参考了开源项目 <code>Normalize.css</code> 和 <code>HTML5</code> Boilerplate 的部分代码；使用 <code>CSS</code> 预处理语言 LESS 编写；使用 Grunt 构建；构建生成的 <code>Bootstrap.css</code> 文件从上到下分为三个部分的代码：</p>\n<ol>\n<li>参考 Normalize.css 的代码；</li>\n<li>参考 HTML5 Boilerplate 的代码；</li>\n<li>Bootstrap v3 自身的代码。</li>\n</ol>\n<h2>Normalize.css 样式</h2>\n<ul>\n<li><code>text-size-adjust: 100%；</code>：使得没有针对移动小屏幕设备进行页面（宽度）优化的网站的字体，得以在小屏幕上进行缩放（一般为放大），并且不会出现横向滚动条。\n*<code>vertical-align: baseline;</code>：定义行内元素或 table cell 的垂直对齐方式。\n*<code>audio:not([controls])</code> 选择器：选择不带 controls 属性的 audio 元素。\n*<code>svg:not(:root)</code>选择器：其实 Normalize.css 作者的意思是选择 HTML 页面内的 SVG 元素。使用了<code>:not(:root)</code> 排除掉非根元素的 SVG 是因为 SVG 在某些文档内可以作为根元素（也就是说这些文档其实并不是 HTML 文档），所以要排除掉。</li>\n<li><code>box-sizing: content-box;</code>：使用 <code>content-box</code> 作为盒模型尺寸，也就是在写一个盒模型大小时，边框宽度不包含在盒模型大小内。也就是假如该盒模型 <code>width: 100px;</code>、<code>border: 10px;</code>，其实际宽度就是 10px（左边框宽度） + 100px（盒模型宽度） + 10px（右边框宽度） = 120px（总宽度）。</li>\n<li><code>appearance: button;</code>：将元素的表现形式设置为 button 的样式（自带一些按钮的状态）。</li>\n<li><code>button::-moz-focus-inner { padding: 0; border: 0; }</code>：针对 Firefox，移除掉 Firefox 按钮 focus 状态下的按钮内边框和间距。\n*<code>::-webkit-inner-spin-button</code> 和<code>::-webkit-outter-spin-button</code> 伪元素：一般配合数字输入框表单元素使用，用于设置数字增减的按钮的样式。</li>\n</ul>\n<h2>HTML5 Boilerplate 样式</h2>\n<ul>\n<li><code>a[href]:after { content: &quot; (&quot; attr(href) &quot;)&quot;; }</code>：在 a 标签的链接后插入 href 属性中的 URL。</li>\n<li><code>p, h2, h3 { orphans: 3; widows: 3; }</code>：当一段块级文字，例如一个段落，跨越两个或多个打印页面，通常而言，这段块级文字只会在页面的最后或开始的地方，显示一到两行内容。<code>widows</code> 和<code>orphans</code> 就是分别用来设置打印页前后可以显示的块级文字段落的行数的。换言之，如果一个打印页面内容不下设置的行数，该块级文字就会往后或往前一页显示。</li>\n<li><code>page-break-after: avoid;</code>：禁止在当前元素后立即换页，也就是当前元素后面一定得跟着一点内容。</li>\n</ul>\n<h2>Bootstrap 样式</h2>\n<ul>\n<li><code>.sr-only { clip: rect(0, 0, 0, 0); }</code>：.sr-only 这个类主要为了增强网站的无障碍性（可访问性）。假设在一个导航栏的 DOM 结构的主要内容之前，有很多超链接，可以使用<code>.sr-only</code>类在视觉上隐藏掉这些超链接。也就是说，为了保证视力障碍用户对网站的正常使用，通常需要在导航栏的主体内容之前，增加一些网页阅读器（朗读器）能够很好识别的内容和结构，以提高视力障碍者对网站结构的理解，而这些内容，恰恰是视力正常用户所不需要的，所以可以使用 <code>.sr-only</code>类在视觉上隐藏掉这些内容，仅供网页阅读器（朗读器）正常辨别即可。语句 <code>clip: rect(0, 0, 0, 0);</code> 用于隐藏添加了 <code>.sr-only</code> 类的 label 标签。</li>\n<li><code>.sr-only-focusable</code> 类：确保一旦超链接被<code>:focus 或者 :active</code> 了，也就是超链接被激活了，就会在视觉上可见。用于照顾使用键盘进行网页导航的用户，也是增强网站的无障碍性（可访问性）的手段之一。</li>\n<li><code>white-space: nowrap;</code> 语句：描述了如何处理空格（包括换行符、空格和制表符），详情见下图：</li>\n</ul>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/587038-9439bb9cb31c555f.png\" alt=\"enter image description here\"></p>\n<ul>\n<li><code>border-collapse: collapse;</code>：为表格设置合并边框。</li>\n<li><code>text-overflow: ellipsis; white-space: nowrap;</code>：组合起来意思就是：超出盒模型宽度的段落不换行，并以 ... 显示。</li>\n<li><code>cursor: help;</code>：鼠标指针变成帮助图标。</li>\n<li><code>box-shadow: inset 0 -1px 0 rgba(0, 0, 0, .25);</code>：盒模型内阴影，向右偏移 0px，向上偏移 1px，阴影扩展 0px，背景色为不透明度 75% 的黑色。</li>\n<li><code>word-break: break-all;</code>：word-break 属性主要用于设置拉丁字符（英文、拉丁文等）与非拉丁字符（也就是 CJK，Chinese、Japanese、Korean，中文、日文、韩文）之间的换行规则。word-break 使得换行可以发生在任意两个字符之间；此选型更多地用于大篇幅非拉丁字符与少量拉丁字符组成的元素中，以便文字更好地分布。也就是说：如果元素内有大量英文，不建议使用这个选项，因为有很大几率会在一个英文单词的某两个字母中进行段落换行。这对于拉丁字符而言，是一个很糟糕的体验（因为拉丁字符的换行通常发生在音节、空格处）。</li>\n</ul>\n<p><strong><em>W3C 规范中关于 word-break 属性的解读：<a href=\"https://www.w3.org/TR/css-text-3/#word-break-property\" target=\"_blank\" rel=\"external\">word-break-property</a></em></strong></p>\n<ul>\n<li>word-wrap: break-word;：word-wrap 是旧标准的遗留产物，新标准中的属性叫 overflow-wrap。word-wrap 属性用于规定当一长串不可换行/断句的字符串由于太长，不能放入一个给定宽度的容器内时，用户代理（浏览器）是否可以在一个单词的内部进行断句以避免产生字符溢出。只有 white-space 设置为允许 wrapping 时，word-wrap 才会生效。</li>\n</ul>\n<p><strong><em>一般而言，<code>word-break: break-all;</code> 和 <code>word-break: break-all;</code>会一起使用。</em></strong></p>\n<ul>\n<li>\n<p><code>touch-action: manipulation;</code>：touch-action 用于指定某个给定的区域是否允许用户操作，以及如何响应用户操作（比如划动、缩放等）。<code>manipulation</code>：浏览器只允许进行滚动和持续缩放操作，任何其它被auto值支持的行为不被支持。</p>\n</li>\n<li>\n<p><code>background-clip: padding-box;</code>：background-clip 设置元素的背景（背景图片或颜色）是否延伸到边框下面。padding-box：边框下面没有背景，即背景延伸到内边距外沿。</p>\n</li>\n<li>\n<p><code>.btn-group &gt; .btn:not(:first-child):not(:last-child):not(.dropdown-toggle)</code> 选择器：选择的是<code>.btn-group</code> 的直接 .btn 子类，它不能是 <code>.btn-group</code> 下的第一个 .btn，也不能是最后一个 .btn，同时不带有<code>.dropdown-toggle</code> 类。由此可见，CSS 伪元素或者伪类可以通过连写的方式来进行条件式选择/排除。</p>\n</li>\n<li>\n<p><code>table-layout: fixed;</code>：table-layout 属性定义了表格布局算法，用于对表格中单元格、行和列进行布局。fixed 选型定义了：表格和列的宽度通过表格的宽度来设置，某一列的宽度仅由该列首行的单元格决定。在当前列中，该单元格所在行之后的行并不会影响整个列宽。\n*<code>:empty</code>伪类选择器：匹配没有任何子元素（包括 text 节点）的元素。\n*<code>text-align: start;</code>：一个实验性质的语句。如果内容方向是从左至右，则等于 text-align: left;，反之则为 text-align: right;。</p>\n</li>\n</ul>\n<h2>总结</h2>\n<p>遇到不懂的，建议在 MDN 上查询：https://developer.mozilla.org/zh-CN/docs/Web/CSS</p>\n<p>若想了解更精确的定义，建议浏览 W3C 标准文档：https://www.w3.org/TR</p>\n<h2>难点</h2>\n<p>其实要构建 Bootstrap v3 这样的大型开源项目，真正的难点在于：</p>\n<p><strong><em>如何进行规划；</em></strong>\n<strong><em>如何优雅地构建；</em></strong>\n<strong><em>如何高效地沟通、协作、配合。</em></strong></p>\n<hr>\n<p>转载请注明来自<a href=\"https://swift3t.github.io/\" target=\"_blank\" rel=\"external\">@白的博客swift3t.github.io</a></p>\n"},{"title":"Ajax学习笔记(二)","url":"http://yoursite.com/2016/07/08/Ajax2/","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><h1>Ajax学习笔记(二) POST请求</h1>\n<p>上一篇我们讲了GET请求,今天我们聊聊POST请求,其实他们整体代码都差不多,差别在于:</p>\n<p><strong><em>与POST相比,GET更简单也更快,在大部分情况都能用,然而,在一下情况中,我们使用POST请求:</em></strong></p>\n<ol>\n<li>无法使用缓存文件(更新服务器上的文件或数据库)</li>\n<li>向服务器发送大量数据(POST没有数据量限制)</li>\n<li>发送包含未知字符的用户输入时,POST比GET更稳定也更可靠</li>\n<li>我们在使用POST请求的时候需要设置请求头</li>\n</ol>\n<p>下面我们看封装好的代码\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\"> &lt;body&gt;</div><div class=\"line\">&lt;p id=&quot;p&quot;&gt;&lt;/p&gt;</div><div class=\"line\">&lt;button id=&quot;btn1&quot;&gt;发送请求&lt;/button&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">function httpPost(url,postBody,successCallback,errorCallback)&#123;</div><div class=\"line\">    //1.获取xmlhttprequest对象</div><div class=\"line\">    var xhr = null;</div><div class=\"line\">    if (window.XMLHttpRequest) &#123;</div><div class=\"line\">        xhr = new XMLHttpRequest();</div><div class=\"line\">    &#125;else&#123;</div><div class=\"line\">        xhr = new ActiveXObject(&quot;Microsoft.XMLHttp&quot;)</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    //2.配置对象信息</div><div class=\"line\">    xhr.open(&quot;POST&quot;,url,true);</div><div class=\"line\">    //3.设置请求头(如果使用post请求,请求头一定要设置)</div><div class=\"line\">    xhr.setRequestHeader(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded; charset=gb2312&quot;);</div><div class=\"line\">    //4.发送请求</div><div class=\"line\">    xhr.send(postBody);</div><div class=\"line\"></div><div class=\"line\">    //监听状态改变</div><div class=\"line\">    xhr.onreadystatechange = function()&#123;</div><div class=\"line\">        if (xhr.readyState == 4) &#123;</div><div class=\"line\">            if (xhr.status == 200) &#123;</div><div class=\"line\">                if (successCallback) &#123;</div><div class=\"line\">                    successCallback(xhr.responseText);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;else&#123;</div><div class=\"line\">                if (errorCallback) &#123;</div><div class=\"line\">                    errorCallback(xhr.statusText);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">var btn = document.getElementById(&apos;btn1&apos;);</div><div class=\"line\">var p = document.getElementById(&apos;p&apos;);</div><div class=\"line\">btn.onclick = function()&#123;</div><div class=\"line\">    var url = &quot;http://localhost/Ajax-1/post.php&quot;;</div><div class=\"line\">    var postBody = &quot;username=zhangsan&amp;password=123456&quot;;</div><div class=\"line\">    httpPost(url,postBody,successCallback,errorCallback);</div><div class=\"line\">&#125;</div><div class=\"line\">function successCallback(responseText)&#123;</div><div class=\"line\">    p.innerHTML  = responseText;</div><div class=\"line\">&#125;</div><div class=\"line\">function errorCallback(statusText)&#123;</div><div class=\"line\">    p.innerHTML = statusText;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<p><strong><em>下面是php代码</em></strong>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">$username = $_POST[&quot;username&quot;];</div><div class=\"line\">$password = $_POST[&quot;password&quot;];</div><div class=\"line\">echo &quot;你的用户名是&#123;$username&#125;,密码是&#123;$password&#125;&quot;;</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure></p>\n<p>因为和GET请求类似,所以我们不多解释代码部分了。</p>\n<hr>\n<p>转载请注明来自<a href=\"https://swift3t.github.io/\" target=\"_blank\" rel=\"external\">@白的博客swift3t.github.io</a></p>\n"},{"title":"Ajax学习笔记(一)","url":"http://yoursite.com/2016/07/07/Ajax1/","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><h1>Ajax学习笔记(一) GET请求</h1>\n<p>我们为什么要学习Ajax呢,它有什么好处.举个例子,如下图,如果没有Ajax的话下面带感叹号的那句话是不会再你输入完手机号立马提示的,它会在等你输入完所有的东西点击提交之后才会提醒你哪里错了,并把整个页面重新刷新了,这样对用户体验并不好.所以才有了如今的Ajax的普及.</p>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/2360985-3d334ba2b49a1a0d.png\" alt=\"enter image description here\"></p>\n<ul>\n<li>在学习Ajax之前,你需要对下面的知识有基本了解\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.HTML/XHTML</div><div class=\"line\">2.CSS</div><div class=\"line\">3.JavaScript/DOM</div><div class=\"line\">4.php(数据库连接)</div></pre></td></tr></table></figure></li>\n</ul>\n<h2>什么是AJAX</h2>\n<p>AJAX 通过在后台与服务器进行少量数据交换,AJAX可以使网页实现异步更新,意味着可以在不重新加载整个网页的情况下,对网页的某部分进行跟新.</p>\n<p>我们先说一下异步和同步:</p>\n<p><code>同步:客户端发送请求-&gt;服务器处理-&gt;客户端等待-&gt;服务端返回响应</code></p>\n<p><code>异步:客户端发送请求-&gt;服务器处理-&gt;响应-&gt;页面载入</code></p>\n<h2>实现AJAX异步处理的必要条件</h2>\n<p>创建 XMLHttpRequest对象\n为了应对所有的现代浏览器,包括IE5和IE6,检查浏览器是否支持XMLHttpRequest对象,如果支持,则创建XMLHttpRequest对象,如果不支持,则创建ActiveXOject</p>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">var xhr = null;</div><div class=\"line\">    //当前浏览器拥有window.XMLHttpRequest属性</div><div class=\"line\">    if (window.XMLHttpRequest) &#123;//for IE 7+ 谷歌等主流浏览器</div><div class=\"line\">        //那么通过new XMLHttpRequest来创建对象</div><div class=\"line\">        xhr = new XMLHttpRequest();</div><div class=\"line\">    &#125;else&#123;//for IE 5 and IE 6</div><div class=\"line\">        //否则通过new ActiveXObject来创建对象</div><div class=\"line\">        xhr = new ActiveXObject(&quot;Microsoft.XMLHttp&quot;);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<h2>规定请求的类型,向服务器发送请求</h2>\n<p>我们使用XMLHttpRequest对象的open()和send()方法来实现这个功能.</p>\n<p>请求的方式有两种(我们常用的)GET和POST,我们首先来说一下GET.</p>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">xhr.open(&quot;GET&quot;,&quot;http://localhost/Ajax-1/get.php?username=zhangsan&amp;password=123456&quot;,true);</div><div class=\"line\">//发送请求</div><div class=\"line\">xhr.send();</div></pre></td></tr></table></figure></p>\n<h2>监听xhr的状态改变事件</h2>\n<p>当请求被发送到服务器时,我们需要执行一些基于响应的任务.所以我们要用到onreadystatechange事件.</p>\n<p>onreadystatechange:存储函数(或函数名),每当readyState属性改变时,就会调用该函数.</p>\n<p>readyState:存有XMLHttpRequest的状态,从0到4的变化.</p>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">0:当XMLHttpRequest对象创建之后,但还未使用open方法</div><div class=\"line\">1:已经设置了请求信息,但尚未发送请求</div><div class=\"line\">2:已经发送请求给服务器,但服务器尚未回应</div><div class=\"line\">3:当服务器收到请求之后,并且做了回应(注意:这个状态可能会出现多次)</div><div class=\"line\">4:当服务器完成全部数据的回应之后,表示请求成功(结束)</div><div class=\"line\"></div><div class=\"line\">status;</div><div class=\"line\">200:(OK) 表示响应就绪</div><div class=\"line\">404:为找到页面</div><div class=\"line\"></div><div class=\"line\">//监听xhr的状态改变事件</div><div class=\"line\">    xhr.onreadystatechange = function()&#123;</div><div class=\"line\">        // alert(xhr.readyState);</div><div class=\"line\">        //判断是否请求成功</div><div class=\"line\">        if (xhr.readyState == 4) &#123;</div><div class=\"line\">            //判断当前请求的状态码</div><div class=\"line\">            if (xhr.status == 200) &#123;</div><div class=\"line\">                //responseText获得字符串形式的响应数据</div><div class=\"line\">                p.innerHTML = xhr.responseText;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>body部分代码如下:</p>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;p id=&quot;p&quot;&gt;&lt;/p&gt;</div><div class=\"line\">&lt;button id=&quot;btn1&quot;&gt;发送请求&lt;/button&gt;</div><div class=\"line\">&lt;/body&gt;</div></pre></td></tr></table></figure></p>\n<p>ok,下一节我们继续学习POST请求。 😏</p>\n<hr>\n<p>转载请注明来自<a href=\"https://swift3t.github.io/\" target=\"_blank\" rel=\"external\">@白的博客swift3t.github.io</a></p>\n"},{"title":"如何搞定网页中那些烦人的图标","url":"http://yoursite.com/2016/07/01/iconfont/","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><h1>如何搞定网页中那些烦人的图标</h1>\n<p>浏览过网页的人都知道，网页中出了包含文字，图片等，通常情况下还包含一些小的图标，这些小图标对于切图人员来说可是一个大麻烦，不但切图工序麻烦，还会让网页中增加许多图片请求，即使是将图片都合成到一张图上，增加了图片合成的工序不说，还得挨个去量每个图标的position，如果一个网页中有许多小图标，我想切图人员必然会抓狂。今天我就来给大家分享一下如何搞定网页中那些烦人的图标。</p>\n<p>我们先来看看我到底说的是那些图标吧。</p>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/1.jpg\" alt=\"enter image description here\"></p>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/22.jpg\" alt=\"enter image description here\"></p>\n<p>看到了吧，就这些小图标。在一个网页中如果有十几二十个这样的小图标，我觉得切图人员的内心必然是崩溃的，边切图心里肯定边骂设计师是傻逼呢。那我们到底如何轻松的解决这件事呢？</p>\n<ol>\n<li>登陆www.iconfont.cn</li>\n</ol>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/3.jpg\" alt=\"enter image description here\"></p>\n<ol start=\"2\">\n<li>点击登录，用新浪微博账号登陆</li>\n</ol>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/4.jpg\" alt=\"enter image description here\"></p>\n<ol start=\"3\">\n<li>在首页搜索框中搜索我们需要的图标</li>\n</ol>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/5.jpg\" alt=\"enter image description here\"></p>\n<ol start=\"4\">\n<li>回车，会进入到搜索结果页面，如下：</li>\n</ol>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/6.jpg\" alt=\"enter image description here\"></p>\n<ol start=\"5\">\n<li>找到我们需要的图标，点击会被添加到暂存架</li>\n</ol>\n<ol start=\"6\">\n<li>点击暂存架</li>\n</ol>\n<ol start=\"7\">\n<li>添加到历史项目或者新项目</li>\n</ol>\n<ol start=\"8\">\n<li>如果是加入历史项目，则点击“存储为历史项目”，创建新项目则点击“存储为新项目”，输入名字之后点击存储。</li>\n</ol>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/7.jpg\" alt=\"enter image description here\"></p>\n<ol start=\"9\">\n<li>存储之后，跳转到项目页面</li>\n</ol>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/8.jpg\" alt=\"enter image description here\"></p>\n<ol start=\"10\">\n<li>鼠标放到“获取在线链接”上，会显示“生成在线链接”。</li>\n</ol>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/9.jpg\" alt=\"enter image description here\"></p>\n<ol start=\"11\">\n<li>复制生成的链接，放到css文件里</li>\n</ol>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/10.jpg\" alt=\"enter image description here\"></p>\n<ol start=\"12\">\n<li>点击“前端应用帮助”，会有详细的使用文档，这里我就不详细介绍了。</li>\n</ol>\n<p>注意事项：</p>\n<p>每次添加新的图标之后，一定要重新生成在线链接，并将新的在线链接复制替换之前css文件的代码。</p>\n<p>有了它，一定会让你眼前一亮，省掉了很多切图的麻烦，心里有没有爽一点？</p>\n<hr>\n<p>转载请注明来自<a href=\"https://swift3t.github.io/\" target=\"_blank\" rel=\"external\">@白的博客swift3t.github.io</a></p>\n"},{"title":"Vue.js Search Highlight","url":"http://yoursite.com/2016/06/23/aa/","content":"<script src=\"/assets/js/APlayer.min.js\"> </script><h2>Vue.js Search Highlight</h2>\n<p><strong>Vue.js</strong> tutorial gives Grid Component Example (Search Component) <a href=\"https://vuejs.org/examples/grid-component.html\" target=\"_blank\" rel=\"external\">here</a>. To make users easier find the letters matched, I add a highlight function to it as following:</p>\n<p><img src=\"http://odx25j0zp.bkt.clouddn.com/1205412-69960e07e8277faf.gif\" alt=\"enter image description here\"></p>\n<h3>Code</h3>\n<ol>\n<li><a href=\"https://jsfiddle.net/HubertWang/t5ac1quc/\" target=\"_blank\" rel=\"external\">Edit and See outcome in JSFiddle</a></li>\n<li><a href=\"https://github.com/WangHong-yang/Vue.js-Search-Highlight\" target=\"_blank\" rel=\"external\">Github Code Page</a></li>\n</ol>\n<h3>Details</h3>\n<p>It is pretty easy to make search highlight with only 10 lines of codes!</p>\n<p>The idea of achieving this is to add a <strong>filter</strong> to match the search key in the table.</p>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Vue.filter(&apos;highlight&apos;, function(words, query)&#123;</div><div class=\"line\">    var iQuery = new RegExp(query, &quot;ig&quot;);</div><div class=\"line\">    return words.toString().replace(iQuery, function(matchedTxt,a,b)&#123;</div><div class=\"line\">        return (&apos;&lt;span class=\\&apos;highlight\\&apos;&gt;&apos; + matchedTxt + &apos;&lt;/span&gt;&apos;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>In the JS code, <code>RegExp</code> function is to make case insensitive. Then the next line of code uses JS original function <code>replace</code> to add a <code>&lt;span&gt;</code> tag with highlight CSS to matched letters.</p>\n<p>In the HTML, apply the <strong>filter</strong> we write to the [content], matching by the [filterKey].</p>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;&#123;&#123;[content] | highlight [filterKey]&#125;&#125;&#125;</div></pre></td></tr></table></figure></p>\n<p>The final step: add highlight style in CSS file.</p>\n<p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.highlight &#123;</div><div class=\"line\">    background-color: yellow;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Highlight done with exactly ten lines of codes! Enjoy your achievement 😃</p>\n<p>(With any question, contact me anytime by leaving a comment <a href=\"http://mr-why.com/post/category/frontend/vuejs-search-highlight\" target=\"_blank\" rel=\"external\">here</a>. I will reply ASAP. -- Hubert Wang)</p>\n<hr>\n<p>转载请注明来自<a href=\"https://swift3t.github.io/\" target=\"_blank\" rel=\"external\">@白的博客swift3t.github.io</a></p>\n"},{"title":"about","url":"http://yoursite.com/about/index.html","content":"<script src=\"/assets/js/APlayer.min.js\"> </script>"},{"title":"search","url":"http://yoursite.com/search/index.html","content":"<script src=\"/assets/js/APlayer.min.js\"> </script>"},{"title":"category","url":"http://yoursite.com/category/index.html","content":"<script src=\"/assets/js/APlayer.min.js\"> </script>"},{"title":"project","url":"http://yoursite.com/project/index.html","content":"<script src=\"/assets/js/APlayer.min.js\"> </script>"},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"<script src=\"/assets/js/APlayer.min.js\"> </script>"},{"title":"link","url":"http://yoursite.com/link/index.html","content":"<script src=\"/assets/js/APlayer.min.js\"> </script>"},{"title":"","url":"http://yoursite.com/css/personal-style.css","content":"<script src=\"/assets/js/APlayer.min.js\"> </script>html.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('http://odx25j0zp.bkt.clouddn.com/bgc.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}"}]